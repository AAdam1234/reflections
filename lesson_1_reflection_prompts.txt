How did viewing a diff between two versions of a file help you see the bug that
was introduced?

The tool highlighted the specific lines of code that were different, negating the necessity of visual inspecting the code for each file.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

Being able to access the history of a file enables you to see when and what has been changed in the file and by whom.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

Maunual commits give the developer the choice of when to commit code changes which might lead to changes that are too small or too large or in the worst case loss of changes due to failure to commit changes.  Automatic changes are guaranteed to occur periodically but lack any logical staging for future reference.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

Git is designed to version software development projects which require a multitude of mutually dependent files.  Google docs is concerned with word processing which usually has one unit of independent work.

How can you use the commands git log and git diff to view the history of files?

git log shows you the various commits for the project. Once you have the unique id for thee commits you can use diff to examine the changes made been any two commits.

How might using version control make you more confident to make changes that
could break something?

With git checkout you can always revert any changes to the prior stage that worked.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here
